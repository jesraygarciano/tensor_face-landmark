{"id":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","dependencies":[{"name":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/package.json","includedInParent":true,"mtime":1717796594000},{"name":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/.babelrc","includedInParent":true,"mtime":1717796594000},{"name":"./image_utils","loc":{"line":20,"column":28,"index":844},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/image_utils.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexports.__esModule = true;\nexports.computeNewRotation = exports.transformNormalizedRect = void 0;\nvar image_utils_1 = require(\"./image_utils\");\n/**\n * Performs geometric transformation to the input normalized rectangle,\n * correpsonding to input normalized rectangle respectively.\n * @param rect The normalized rectangle.\n * @param imageSize The original imageSize.\n * @param config See documentation in `RectTransformationConfig`.\n */\n// ref:\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/util/rect_transformation_calculator.cc\nfunction transformNormalizedRect(rect, imageSize, config) {\n    var width = rect.width;\n    var height = rect.height;\n    var rotation = rect.rotation;\n    if (config.rotation != null || config.rotationDegree != null) {\n        rotation = computeNewRotation(rotation, config);\n    }\n    if (rotation === 0) {\n        rect.xCenter = rect.xCenter + width * config.shiftX;\n        rect.yCenter = rect.yCenter + height * config.shiftY;\n    }\n    else {\n        var xShift = (imageSize.width * width * config.shiftX * Math.cos(rotation) -\n            imageSize.height * height * config.shiftY * Math.sin(rotation)) /\n            imageSize.width;\n        var yShift = (imageSize.width * width * config.shiftX * Math.sin(rotation) +\n            imageSize.height * height * config.shiftY * Math.cos(rotation)) /\n            imageSize.height;\n        rect.xCenter = rect.xCenter + xShift;\n        rect.yCenter = rect.yCenter + yShift;\n    }\n    if (config.squareLong) {\n        var longSide = Math.max(width * imageSize.width, height * imageSize.height);\n        width = longSide / imageSize.width;\n        height = longSide / imageSize.height;\n    }\n    else if (config.squareShort) {\n        var shortSide = Math.min(width * imageSize.width, height * imageSize.height);\n        width = shortSide / imageSize.width;\n        height = shortSide / imageSize.height;\n    }\n    rect.width = width * config.scaleX;\n    rect.height = height * config.scaleY;\n    return rect;\n}\nexports.transformNormalizedRect = transformNormalizedRect;\nfunction computeNewRotation(rotation, config) {\n    if (config.rotation != null) {\n        rotation += config.rotation;\n    }\n    else if (config.rotationDegree != null) {\n        rotation += Math.PI * config.rotationDegree / 180;\n    }\n    return (0, image_utils_1.normalizeRadians)(rotation);\n}\nexports.computeNewRotation = computeNewRotation;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/transform_rect.js":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexports.__esModule = true;\nexports.computeNewRotation = exports.transformNormalizedRect = void 0;\nvar image_utils_1 = require(\"./image_utils\");\n/**\n * Performs geometric transformation to the input normalized rectangle,\n * correpsonding to input normalized rectangle respectively.\n * @param rect The normalized rectangle.\n * @param imageSize The original imageSize.\n * @param config See documentation in `RectTransformationConfig`.\n */\n// ref:\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/util/rect_transformation_calculator.cc\nfunction transformNormalizedRect(rect, imageSize, config) {\n    var width = rect.width;\n    var height = rect.height;\n    var rotation = rect.rotation;\n    if (config.rotation != null || config.rotationDegree != null) {\n        rotation = computeNewRotation(rotation, config);\n    }\n    if (rotation === 0) {\n        rect.xCenter = rect.xCenter + width * config.shiftX;\n        rect.yCenter = rect.yCenter + height * config.shiftY;\n    }\n    else {\n        var xShift = (imageSize.width * width * config.shiftX * Math.cos(rotation) -\n            imageSize.height * height * config.shiftY * Math.sin(rotation)) /\n            imageSize.width;\n        var yShift = (imageSize.width * width * config.shiftX * Math.sin(rotation) +\n            imageSize.height * height * config.shiftY * Math.cos(rotation)) /\n            imageSize.height;\n        rect.xCenter = rect.xCenter + xShift;\n        rect.yCenter = rect.yCenter + yShift;\n    }\n    if (config.squareLong) {\n        var longSide = Math.max(width * imageSize.width, height * imageSize.height);\n        width = longSide / imageSize.width;\n        height = longSide / imageSize.height;\n    }\n    else if (config.squareShort) {\n        var shortSide = Math.min(width * imageSize.width, height * imageSize.height);\n        width = shortSide / imageSize.width;\n        height = shortSide / imageSize.height;\n    }\n    rect.width = width * config.scaleX;\n    rect.height = height * config.scaleY;\n    return rect;\n}\nexports.transformNormalizedRect = transformNormalizedRect;\nfunction computeNewRotation(rotation, config) {\n    if (config.rotation != null) {\n        rotation += config.rotation;\n    }\n    else if (config.rotationDegree != null) {\n        rotation += Math.PI * config.rotationDegree / 180;\n    }\n    return (0, image_utils_1.normalizeRadians)(rotation);\n}\nexports.computeNewRotation = computeNewRotation;\n"},"lineCount":76}},"error":null,"hash":"63e6574e93b4e8f130022b1685c476f0","cacheData":{"env":{}}}
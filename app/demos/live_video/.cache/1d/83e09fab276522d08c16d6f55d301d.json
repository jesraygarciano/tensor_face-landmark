{"id":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","dependencies":[{"name":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/package.json","includedInParent":true,"mtime":1717796594000},{"name":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/.babelrc","includedInParent":true,"mtime":1717796594000},{"name":"@mediapipe/face_mesh","loc":{"line":56,"column":23,"index":3263},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@mediapipe/face_mesh/face_mesh.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":57,"column":17,"index":3305},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../constants","loc":{"line":58,"column":26,"index":3357},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/constants.js"},{"name":"../shared/calculators/landmarks_to_detection","loc":{"line":59,"column":39,"index":3413},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/landmarks_to_detection.js"},{"name":"./detector_utils","loc":{"line":60,"column":31,"index":3493},"parent":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/jesraygarciano/Documents/hamoni/tensor-face-landmark/app/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector_utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports.load = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar faceMesh = require(\"@mediapipe/face_mesh\");\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar constants_1 = require(\"../constants\");\nvar landmarks_to_detection_1 = require(\"../shared/calculators/landmarks_to_detection\");\nvar detector_utils_1 = require(\"./detector_utils\");\n/**\n * MediaPipe detector class.\n */\nvar MediaPipeFaceMeshMediaPipeLandmarksDetector = /** @class */ (function () {\n    // Should not be called outside.\n    function MediaPipeFaceMeshMediaPipeLandmarksDetector(config) {\n        var _this = this;\n        // This will be filled out by asynchronous calls to onResults. They will be\n        // stable after `await send` is called on the faces solution.\n        this.width = 0;\n        this.height = 0;\n        this.selfieMode = false;\n        this.faceMeshSolution = new faceMesh.FaceMesh({\n            locateFile: function (path, base) {\n                if (config.solutionPath) {\n                    var solutionPath = config.solutionPath.replace(/\\/+$/, '');\n                    return solutionPath + \"/\" + path;\n                }\n                return base + \"/\" + path;\n            }\n        });\n        this.faceMeshSolution.setOptions({\n            refineLandmarks: config.refineLandmarks,\n            selfieMode: this.selfieMode,\n            maxNumFaces: config.maxFaces\n        });\n        this.faceMeshSolution.onResults(function (results) {\n            _this.height = results.image.height;\n            _this.width = results.image.width;\n            _this.faces = [];\n            if (results.multiFaceLandmarks !== null) {\n                var landmarksList = results.multiFaceLandmarks;\n                for (var i = 0; i < landmarksList.length; i++) {\n                    var keypoints = _this.translateOutput(landmarksList[i]);\n                    _this.faces.push({\n                        keypoints: keypoints,\n                        box: (0, landmarks_to_detection_1.landmarksToDetection)(keypoints).locationData.relativeBoundingBox\n                    });\n                }\n            }\n        });\n    }\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.translateOutput = function (landmarks) {\n        var _this = this;\n        var keypoints = landmarks.map(function (landmark, i) {\n            var keypoint = {\n                x: landmark.x * _this.width,\n                y: landmark.y * _this.height,\n                z: landmark.z * _this.width\n            };\n            var name = constants_1.MEDIAPIPE_FACE_MESH_KEYPOINTS.get(i);\n            if (name != null) {\n                keypoint.name = name;\n            }\n            return keypoint;\n        });\n        return keypoints;\n    };\n    /**\n     * Estimates faces for an image or video frame.\n     *\n     * It returns a single face or multiple faces based on the maxFaceMesh\n     * parameter passed to the constructor of the class.\n     *\n     * @param input\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\n     * image to feed through the network.\n     *\n     * @param config Optional.\n     *       flipHorizontal: Optional. Default to false. When image data comes\n     *       from camera, the result has to flip horizontally.\n     *\n     *       staticImageMode: Optional. Defaults to false. Currently unused in\n     * this implementation. Image input types are assumed to be static images, and\n     * video inputs are assumed to be non static images.\n     *\n     * @return An array of `Face`s.\n     */\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.estimateFaces = function (input, estimationConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (estimationConfig && estimationConfig.flipHorizontal &&\n                            (estimationConfig.flipHorizontal !== this.selfieMode)) {\n                            this.selfieMode = estimationConfig.flipHorizontal;\n                            this.faceMeshSolution.setOptions({\n                                selfieMode: this.selfieMode\n                            });\n                        }\n                        if (!(input instanceof tf.Tensor)) return [3 /*break*/, 2];\n                        _b = ImageData.bind;\n                        return [4 /*yield*/, tf.browser.toPixels(input)];\n                    case 1:\n                        _a = new (_b.apply(ImageData, [void 0, _c.sent(), input.shape[1], input.shape[0]]))();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = input;\n                        _c.label = 3;\n                    case 3:\n                        // Cast to GL TexImageSource types.\n                        input = _a;\n                        return [4 /*yield*/, this.faceMeshSolution.send({ image: input })];\n                    case 4:\n                        _c.sent();\n                        return [2 /*return*/, this.faces];\n                }\n            });\n        });\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.dispose = function () {\n        this.faceMeshSolution.close();\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.reset = function () {\n        this.faceMeshSolution.reset();\n        this.width = 0;\n        this.height = 0;\n        this.faces = null;\n        this.selfieMode = false;\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.initialize = function () {\n        return this.faceMeshSolution.initialize();\n    };\n    return MediaPipeFaceMeshMediaPipeLandmarksDetector;\n}());\n/**\n * Loads the MediaPipe solution.\n *\n * @param modelConfig An object that contains parameters for\n * the MediaPipeFaceMesh loading process. Please find more details of each\n * parameters in the documentation of the\n * `MediaPipeFaceMeshMediaPipeModelConfig` interface.\n */\nfunction load(modelConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, detector;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\n                    detector = new MediaPipeFaceMeshMediaPipeLandmarksDetector(config);\n                    return [4 /*yield*/, detector.initialize()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, detector];\n            }\n        });\n    });\n}\nexports.load = load;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}}],"sources":{"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports.load = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar faceMesh = require(\"@mediapipe/face_mesh\");\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar constants_1 = require(\"../constants\");\nvar landmarks_to_detection_1 = require(\"../shared/calculators/landmarks_to_detection\");\nvar detector_utils_1 = require(\"./detector_utils\");\n/**\n * MediaPipe detector class.\n */\nvar MediaPipeFaceMeshMediaPipeLandmarksDetector = /** @class */ (function () {\n    // Should not be called outside.\n    function MediaPipeFaceMeshMediaPipeLandmarksDetector(config) {\n        var _this = this;\n        // This will be filled out by asynchronous calls to onResults. They will be\n        // stable after `await send` is called on the faces solution.\n        this.width = 0;\n        this.height = 0;\n        this.selfieMode = false;\n        this.faceMeshSolution = new faceMesh.FaceMesh({\n            locateFile: function (path, base) {\n                if (config.solutionPath) {\n                    var solutionPath = config.solutionPath.replace(/\\/+$/, '');\n                    return solutionPath + \"/\" + path;\n                }\n                return base + \"/\" + path;\n            }\n        });\n        this.faceMeshSolution.setOptions({\n            refineLandmarks: config.refineLandmarks,\n            selfieMode: this.selfieMode,\n            maxNumFaces: config.maxFaces\n        });\n        this.faceMeshSolution.onResults(function (results) {\n            _this.height = results.image.height;\n            _this.width = results.image.width;\n            _this.faces = [];\n            if (results.multiFaceLandmarks !== null) {\n                var landmarksList = results.multiFaceLandmarks;\n                for (var i = 0; i < landmarksList.length; i++) {\n                    var keypoints = _this.translateOutput(landmarksList[i]);\n                    _this.faces.push({\n                        keypoints: keypoints,\n                        box: (0, landmarks_to_detection_1.landmarksToDetection)(keypoints).locationData.relativeBoundingBox\n                    });\n                }\n            }\n        });\n    }\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.translateOutput = function (landmarks) {\n        var _this = this;\n        var keypoints = landmarks.map(function (landmark, i) {\n            var keypoint = {\n                x: landmark.x * _this.width,\n                y: landmark.y * _this.height,\n                z: landmark.z * _this.width\n            };\n            var name = constants_1.MEDIAPIPE_FACE_MESH_KEYPOINTS.get(i);\n            if (name != null) {\n                keypoint.name = name;\n            }\n            return keypoint;\n        });\n        return keypoints;\n    };\n    /**\n     * Estimates faces for an image or video frame.\n     *\n     * It returns a single face or multiple faces based on the maxFaceMesh\n     * parameter passed to the constructor of the class.\n     *\n     * @param input\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\n     * image to feed through the network.\n     *\n     * @param config Optional.\n     *       flipHorizontal: Optional. Default to false. When image data comes\n     *       from camera, the result has to flip horizontally.\n     *\n     *       staticImageMode: Optional. Defaults to false. Currently unused in\n     * this implementation. Image input types are assumed to be static images, and\n     * video inputs are assumed to be non static images.\n     *\n     * @return An array of `Face`s.\n     */\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.estimateFaces = function (input, estimationConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (estimationConfig && estimationConfig.flipHorizontal &&\n                            (estimationConfig.flipHorizontal !== this.selfieMode)) {\n                            this.selfieMode = estimationConfig.flipHorizontal;\n                            this.faceMeshSolution.setOptions({\n                                selfieMode: this.selfieMode\n                            });\n                        }\n                        if (!(input instanceof tf.Tensor)) return [3 /*break*/, 2];\n                        _b = ImageData.bind;\n                        return [4 /*yield*/, tf.browser.toPixels(input)];\n                    case 1:\n                        _a = new (_b.apply(ImageData, [void 0, _c.sent(), input.shape[1], input.shape[0]]))();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = input;\n                        _c.label = 3;\n                    case 3:\n                        // Cast to GL TexImageSource types.\n                        input = _a;\n                        return [4 /*yield*/, this.faceMeshSolution.send({ image: input })];\n                    case 4:\n                        _c.sent();\n                        return [2 /*return*/, this.faces];\n                }\n            });\n        });\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.dispose = function () {\n        this.faceMeshSolution.close();\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.reset = function () {\n        this.faceMeshSolution.reset();\n        this.width = 0;\n        this.height = 0;\n        this.faces = null;\n        this.selfieMode = false;\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.initialize = function () {\n        return this.faceMeshSolution.initialize();\n    };\n    return MediaPipeFaceMeshMediaPipeLandmarksDetector;\n}());\n/**\n * Loads the MediaPipe solution.\n *\n * @param modelConfig An object that contains parameters for\n * the MediaPipeFaceMesh loading process. Please find more details of each\n * parameters in the documentation of the\n * `MediaPipeFaceMeshMediaPipeModelConfig` interface.\n */\nfunction load(modelConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, detector;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\n                    detector = new MediaPipeFaceMeshMediaPipeLandmarksDetector(config);\n                    return [4 /*yield*/, detector.initialize()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, detector];\n            }\n        });\n    });\n}\nexports.load = load;\n"},"lineCount":212}},"error":null,"hash":"be960788b6a757817285c7c9d7aa887d","cacheData":{"env":{}}}